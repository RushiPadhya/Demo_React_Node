{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CLink } from '../link/CLink.js';\nimport { colorPropType } from '../../props.js';\nvar CListGroupItem = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    active = _a.active,\n    className = _a.className,\n    disabled = _a.disabled,\n    color = _a.color,\n    _c = _a.component,\n    component = _c === void 0 ? 'li' : _c,\n    rest = __rest(_a, [\"children\", \"active\", \"className\", \"disabled\", \"color\", \"component\"]);\n  var Component = component === 'a' || component === 'button' ? CLink : component;\n  rest = __assign(__assign(__assign(__assign({}, (component === 'a' || component === 'button') && {\n    active: active,\n    disabled: disabled,\n    component: component,\n    ref: ref\n  }), active && {\n    'aria-current': true\n  }), disabled && {\n    'aria-disabled': true\n  }), rest);\n  return React.createElement(Component, __assign({\n    className: classNames('list-group-item', (_b = {}, _b[\"list-group-item-\".concat(color)] = color, _b['list-group-item-action'] = component === 'a' || component === 'button', _b.active = active, _b.disabled = disabled, _b), className)\n  }, rest), children);\n});\nCListGroupItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  component: PropTypes.elementType,\n  disabled: PropTypes.bool\n};\nCListGroupItem.displayName = 'CListGroupItem';\nexport { CListGroupItem };","map":{"version":3,"names":["CListGroupItem","forwardRef","_a","ref","children","active","className","disabled","color","_c","component","rest","__rest","Component","CLink","__assign","React","createElement","classNames","_b","concat","propTypes","PropTypes","bool","node","string","colorPropType","elementType","displayName"],"sources":["C:\\Users\\Syndell025\\OneDrive\\Documents\\GitHub\\Demo_React_Node\\frontend\\node_modules\\@coreui\\react\\src\\components\\list-group\\CListGroupItem.tsx"],"sourcesContent":["import React, { ElementType, AnchorHTMLAttributes, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink } from '../link/CLink'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CListGroupItemProps\n  extends AnchorHTMLAttributes<HTMLLIElement | HTMLAnchorElement | HTMLButtonElement> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUIâ€™s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  component?: string | ElementType\n}\n\nexport const CListGroupItem = forwardRef<\n  HTMLLIElement | HTMLAnchorElement | HTMLButtonElement,\n  CListGroupItemProps\n>(({ children, active, className, disabled, color, component = 'li', ...rest }, ref) => {\n  const Component = component === 'a' || component === 'button' ? CLink : component\n\n  rest = {\n    ...((component === 'a' || component === 'button') && {\n      active,\n      disabled,\n      component,\n      ref: ref,\n    }),\n    ...(active && { 'aria-current': true }),\n    ...(disabled && { 'aria-disabled': true }),\n    ...rest,\n  }\n\n  return (\n    <Component\n      className={classNames(\n        'list-group-item',\n        {\n          [`list-group-item-${color}`]: color,\n          'list-group-item-action': component === 'a' || component === 'button',\n          active,\n          disabled,\n        },\n        className,\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  )\n})\n\nCListGroupItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  component: PropTypes.elementType,\n  disabled: PropTypes.bool,\n}\n\nCListGroupItem.displayName = 'CListGroupItem'\n"],"mappings":";;;;;;IAmCaA,cAAc,GAAGC,UAAU,CAGtC,UAACC,EAA2E,EAAEC,GAAG;;EAA9E,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;IAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IAAEC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;IAAEC,KAAK,GAAAN,EAAA,CAAAM,KAAA;IAAEC,EAAgB,GAAAP,EAAA,CAAAQ,SAAA;IAAhBA,SAAS,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IAAKE,IAAI,GAAzEC,MAAA,CAAAV,EAAA,uEAA2E,CAAF;EAC1E,IAAMW,SAAS,GAAGH,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,QAAQ,GAAGI,KAAK,GAAGJ,SAAS;EAEjFC,IAAI,GAAAI,QAAA,CAAAA,QAAA,CAAAA,QAAA,CAAAA,QAAA,KACE,CAACL,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,QAAQ,KAAK;IACnDL,MAAM,EAAAA,MAAA;IACNE,QAAQ,EAAAA,QAAA;IACRG,SAAS,EAAAA,SAAA;IACTP,GAAG,EAAEA;GACN,CAAC,EACEE,MAAM,IAAI;IAAE,cAAc,EAAE;EAAI,CAAE,CAAC,EACnCE,QAAQ,IAAI;IAAE,eAAe,EAAE;EAAI,CAAE,CAAC,EACvCI,IAAI,CACR;EAED,OACEK,KAAA,CAAAC,aAAA,CAACJ,SAAS,EAAAE,QAAA;IACRT,SAAS,EAAEY,UAAU,CACnB,iBAAiB,GAAAC,EAAA,OAEfA,EAAA,CAAC,kBAAmB,CAAAC,MAAA,CAAAZ,KAAK,CAAE,IAAGA,KAAK,EACnCW,EAAA,0BAAwB,GAAET,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,QAAQ,EACrES,EAAA,CAAAd,MAAM,GAAAA,MAAA,EACNc,EAAA,CAAAZ,QAAQ,GAAAA,QAAA,EAEVY,EAAA,GAAAb,SAAS;EACV,CACG,EAAAK,IAAI,GAEPP,QAAQ,CACC;AAEhB,CAAC;AAEDJ,cAAc,CAACqB,SAAS,GAAG;EACzBhB,MAAM,EAAEiB,SAAS,CAACC,IAAI;EACtBnB,QAAQ,EAAEkB,SAAS,CAACE,IAAI;EACxBlB,SAAS,EAAEgB,SAAS,CAACG,MAAM;EAC3BjB,KAAK,EAAEkB,aAAa;EACpBhB,SAAS,EAAEY,SAAS,CAACK,WAAW;EAChCpB,QAAQ,EAAEe,SAAS,CAACC;CACrB;AAEDvB,cAAc,CAAC4B,WAAW,GAAG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}