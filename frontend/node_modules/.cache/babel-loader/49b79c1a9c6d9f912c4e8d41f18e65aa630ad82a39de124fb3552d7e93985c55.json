{"ast":null,"code":"import { useRef } from 'react';\nimport { createPopper } from '@popperjs/core';\nimport executeAfterTransition from '../utils/executeAfterTransition.js';\nvar usePopper = function () {\n  var _popper = useRef();\n  var el = useRef();\n  var initPopper = function (reference, popper, options) {\n    _popper.current = createPopper(reference, popper, options);\n    el.current = popper;\n  };\n  var destroyPopper = function () {\n    var popperInstance = _popper.current;\n    if (popperInstance && el.current) {\n      executeAfterTransition(function () {\n        popperInstance.destroy();\n      }, el.current);\n    }\n    _popper.current = undefined;\n  };\n  return {\n    popper: _popper.current,\n    initPopper: initPopper,\n    destroyPopper: destroyPopper\n  };\n};\nexport { usePopper };","map":{"version":3,"names":["usePopper","_popper","useRef","el","initPopper","reference","popper","options","current","createPopper","destroyPopper","popperInstance","executeAfterTransition","destroy","undefined"],"sources":["C:\\Users\\Syndell025\\OneDrive\\Documents\\GitHub\\Demo_React_Node\\frontend\\node_modules\\@coreui\\react\\src\\hooks\\usePopper.ts"],"sourcesContent":["import { useRef } from 'react'\nimport { createPopper } from '@popperjs/core'\nimport type { Instance, Options } from '@popperjs/core'\n\nimport { executeAfterTransition } from '../utils'\n\ninterface UsePopperOutput {\n  popper: Instance | undefined\n  initPopper: (reference: HTMLElement, popper: HTMLElement, options: Partial<Options>) => void\n  destroyPopper: () => void\n}\n\nexport const usePopper = (): UsePopperOutput => {\n  const _popper = useRef<Instance>()\n  const el = useRef<HTMLElement>()\n\n  const initPopper = (reference: HTMLElement, popper: HTMLElement, options: Partial<Options>) => {\n    _popper.current = createPopper(reference, popper, options)\n    el.current = popper\n  }\n\n  const destroyPopper = () => {\n    const popperInstance = _popper.current\n\n    if (popperInstance && el.current) {\n      executeAfterTransition(() => {\n        popperInstance.destroy()\n      }, el.current)\n    }\n\n    _popper.current = undefined\n  }\n\n  return {\n    popper: _popper.current,\n    initPopper,\n    destroyPopper,\n  }\n}\n"],"mappings":";;;AAYa,IAAAA,SAAS,GAAG,SAAAA,CAAA;EACvB,IAAMC,OAAO,GAAGC,MAAM,EAAY;EAClC,IAAMC,EAAE,GAAGD,MAAM,EAAe;EAEhC,IAAME,UAAU,GAAG,SAAAA,CAACC,SAAsB,EAAEC,MAAmB,EAAEC,OAAyB;IACxFN,OAAO,CAACO,OAAO,GAAGC,YAAY,CAACJ,SAAS,EAAEC,MAAM,EAAEC,OAAO,CAAC;IAC1DJ,EAAE,CAACK,OAAO,GAAGF,MAAM;EACrB,CAAC;EAED,IAAMI,aAAa,GAAG,SAAAA,CAAA;IACpB,IAAMC,cAAc,GAAGV,OAAO,CAACO,OAAO;IAEtC,IAAIG,cAAc,IAAIR,EAAE,CAACK,OAAO,EAAE;MAChCI,sBAAsB,CAAC;QACrBD,cAAc,CAACE,OAAO,EAAE;MAC1B,CAAC,EAAEV,EAAE,CAACK,OAAO,CAAC;IACf;IAEDP,OAAO,CAACO,OAAO,GAAGM,SAAS;EAC7B,CAAC;EAED,OAAO;IACLR,MAAM,EAAEL,OAAO,CAACO,OAAO;IACvBJ,UAAU,EAAAA,UAAA;IACVM,aAAa,EAAAA;GACd;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}