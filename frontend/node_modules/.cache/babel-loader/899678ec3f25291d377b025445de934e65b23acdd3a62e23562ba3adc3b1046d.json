{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport classNames from '../../node_modules/classnames/index.js';\nimport PropTypes from 'prop-types';\nimport { CConditionalPortal } from '../conditional-portal/CConditionalPortal.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport { usePopper } from '../../hooks/usePopper.js';\nimport { fallbackPlacementsPropType, triggerPropType } from '../../props.js';\nimport getTransitionDurationFromElement from '../../utils/getTransitionDurationFromElement.js';\nimport getRTLPlacement from '../../utils/getRTLPlacement.js';\nimport Transition from '../../node_modules/react-transition-group/esm/Transition.js';\nvar CTooltip = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    _b = _a.animation,\n    animation = _b === void 0 ? true : _b,\n    className = _a.className,\n    container = _a.container,\n    content = _a.content,\n    _c = _a.delay,\n    delay = _c === void 0 ? 0 : _c,\n    _d = _a.fallbackPlacements,\n    fallbackPlacements = _d === void 0 ? ['top', 'right', 'bottom', 'left'] : _d,\n    _e = _a.offset,\n    offset = _e === void 0 ? [0, 6] : _e,\n    onHide = _a.onHide,\n    onShow = _a.onShow,\n    _f = _a.placement,\n    placement = _f === void 0 ? 'top' : _f,\n    _g = _a.trigger,\n    trigger = _g === void 0 ? ['hover', 'focus'] : _g,\n    visible = _a.visible,\n    rest = __rest(_a, [\"children\", \"animation\", \"className\", \"container\", \"content\", \"delay\", \"fallbackPlacements\", \"offset\", \"onHide\", \"onShow\", \"placement\", \"trigger\", \"visible\"]);\n  var tooltipRef = useRef(null);\n  var togglerRef = useRef(null);\n  var forkedRef = useForkedRef(ref, tooltipRef);\n  var _h = usePopper(),\n    initPopper = _h.initPopper,\n    destroyPopper = _h.destroyPopper;\n  var _j = useState(visible),\n    _visible = _j[0],\n    setVisible = _j[1];\n  var _delay = typeof delay === 'number' ? {\n    show: delay,\n    hide: delay\n  } : delay;\n  var popperConfig = {\n    modifiers: [{\n      name: 'arrow',\n      options: {\n        element: '.tooltip-arrow'\n      }\n    }, {\n      name: 'flip',\n      options: {\n        fallbackPlacements: fallbackPlacements\n      }\n    }, {\n      name: 'offset',\n      options: {\n        offset: offset\n      }\n    }],\n    placement: getRTLPlacement(placement, togglerRef.current)\n  };\n  useEffect(function () {\n    setVisible(visible);\n  }, [visible]);\n  useEffect(function () {\n    if (_visible && togglerRef.current && tooltipRef.current) {\n      initPopper(togglerRef.current, tooltipRef.current, popperConfig);\n    }\n    return function () {\n      destroyPopper();\n    };\n  }, [_visible]);\n  var toggleVisible = function (visible) {\n    if (visible) {\n      setTimeout(function () {\n        return setVisible(true);\n      }, _delay.show);\n      return;\n    }\n    setTimeout(function () {\n      return setVisible(false);\n    }, _delay.hide);\n  };\n  return React.createElement(React.Fragment, null, React.cloneElement(children, __assign(__assign(__assign({\n    ref: togglerRef\n  }, (trigger === 'click' || trigger.includes('click')) && {\n    onClick: function () {\n      return toggleVisible(!_visible);\n    }\n  }), (trigger === 'focus' || trigger.includes('focus')) && {\n    onFocus: function () {\n      return toggleVisible(true);\n    },\n    onBlur: function () {\n      return toggleVisible(false);\n    }\n  }), (trigger === 'hover' || trigger.includes('hover')) && {\n    onMouseEnter: function () {\n      return toggleVisible(true);\n    },\n    onMouseLeave: function () {\n      return toggleVisible(false);\n    }\n  })), React.createElement(CConditionalPortal, {\n    container: container,\n    portal: true\n  }, React.createElement(Transition, {\n    in: _visible,\n    mountOnEnter: true,\n    nodeRef: tooltipRef,\n    onEnter: onShow,\n    onExit: onHide,\n    timeout: {\n      enter: 0,\n      exit: tooltipRef.current ? getTransitionDurationFromElement(tooltipRef.current) + 50 : 200\n    },\n    unmountOnExit: true\n  }, function (state) {\n    return React.createElement(\"div\", __assign({\n      className: classNames('tooltip', 'bs-tooltip-auto', {\n        fade: animation,\n        show: state === 'entered'\n      }, className),\n      ref: forkedRef,\n      role: \"tooltip\"\n    }, rest), React.createElement(\"div\", {\n      className: \"tooltip-arrow\"\n    }), React.createElement(\"div\", {\n      className: \"tooltip-inner\"\n    }, content));\n  })));\n});\nCTooltip.propTypes = {\n  animation: PropTypes.bool,\n  children: PropTypes.node,\n  container: PropTypes.any,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  delay: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    show: PropTypes.number.isRequired,\n    hide: PropTypes.number.isRequired\n  })]),\n  fallbackPlacements: fallbackPlacementsPropType,\n  offset: PropTypes.any,\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  placement: PropTypes.oneOf(['auto', 'top', 'right', 'bottom', 'left']),\n  trigger: triggerPropType,\n  visible: PropTypes.bool\n};\nCTooltip.displayName = 'CTooltip';\nexport { CTooltip };","map":{"version":3,"names":["CTooltip","forwardRef","_a","ref","children","_b","animation","className","container","content","_c","delay","_d","fallbackPlacements","_e","offset","onHide","onShow","_f","placement","_g","trigger","visible","rest","__rest","tooltipRef","useRef","togglerRef","forkedRef","useForkedRef","_h","usePopper","initPopper","destroyPopper","_j","useState","_visible","setVisible","_delay","show","hide","popperConfig","modifiers","name","options","element","getRTLPlacement","current","useEffect","toggleVisible","setTimeout","React","createElement","Fragment","cloneElement","__assign","includes","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","CConditionalPortal","portal","Transition","in","mountOnEnter","nodeRef","onEnter","onExit","timeout","enter","exit","getTransitionDurationFromElement","unmountOnExit","state","classNames","fade","role","propTypes","PropTypes","bool","node","any","oneOfType","string","number","shape","isRequired","fallbackPlacementsPropType","func","oneOf","triggerPropType","displayName"],"sources":["C:\\Users\\Syndell025\\OneDrive\\Documents\\GitHub\\Demo_React_Node\\frontend\\node_modules\\@coreui\\react\\src\\components\\tooltip\\CTooltip.tsx"],"sourcesContent":["import React, { forwardRef, HTMLAttributes, ReactNode, useRef, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport { Transition } from 'react-transition-group'\n\nimport { CConditionalPortal } from '../conditional-portal'\nimport { useForkedRef, usePopper } from '../../hooks'\nimport { fallbackPlacementsPropType, triggerPropType } from '../../props'\nimport type { Placements, Triggers } from '../../types'\nimport { getRTLPlacement, getTransitionDurationFromElement } from '../../utils'\n\nexport interface CTooltipProps extends Omit<HTMLAttributes<HTMLDivElement>, 'content'> {\n  /**\n   * Apply a CSS fade transition to the tooltip.\n   *\n   * @since 4.9.0\n   */\n  animation?: boolean\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Appends the react tooltip to a specific element. You can pass an HTML element or function that returns a single element. By default `document.body`.\n   *\n   * @since v4.11.0\n   */\n  container?: Element | (() => Element | null) | null\n  /**\n   * Content node for your component.\n   */\n  content: ReactNode | string\n  /**\n   * The delay for displaying and hiding the tooltip (in milliseconds). When a numerical value is provided, the delay applies to both the hide and show actions. The object structure for specifying the delay is as follows: delay: `{ 'show': 500, 'hide': 100 }`.\n   *\n   * @since 4.9.0\n   */\n  delay?: number | { show: number; hide: number }\n  /**\n   * Specify the desired order of fallback placements by providing a list of placements as an array. The placements should be prioritized based on preference.\n   *\n   * @since 4.9.0\n   */\n  fallbackPlacements?: Placements | Placements[]\n  /**\n   * Offset of the tooltip relative to its target.\n   */\n  offset?: [number, number]\n  /**\n   * Callback fired when the component requests to be hidden.\n   */\n  onHide?: () => void\n  /**\n   * Callback fired when the component requests to be shown.\n   */\n  onShow?: () => void\n  /**\n   * Sets which event handlers youâ€™d like provided to your toggle prop. You can specify one trigger or an array of them.\n   *\n   * @type 'hover' | 'focus' | 'click'\n   */\n  trigger?: Triggers | Triggers[]\n  /**\n   * Describes the placement of your component after Popper.js has applied all the modifiers that may have flipped or altered the originally provided placement property.\n   */\n  placement?: 'auto' | 'top' | 'right' | 'bottom' | 'left'\n  /**\n   * Toggle the visibility of tooltip component.\n   */\n  visible?: boolean\n}\n\nexport const CTooltip = forwardRef<HTMLDivElement, CTooltipProps>(\n  (\n    {\n      children,\n      animation = true,\n      className,\n      container,\n      content,\n      delay = 0,\n      fallbackPlacements = ['top', 'right', 'bottom', 'left'],\n      offset = [0, 6],\n      onHide,\n      onShow,\n      placement = 'top',\n      trigger = ['hover', 'focus'],\n      visible,\n      ...rest\n    },\n    ref,\n  ) => {\n    const tooltipRef = useRef(null)\n    const togglerRef = useRef(null)\n    const forkedRef = useForkedRef(ref, tooltipRef)\n\n    const { initPopper, destroyPopper } = usePopper()\n    const [_visible, setVisible] = useState(visible)\n\n    const _delay = typeof delay === 'number' ? { show: delay, hide: delay } : delay\n\n    const popperConfig = {\n      modifiers: [\n        {\n          name: 'arrow',\n          options: {\n            element: '.tooltip-arrow',\n          },\n        },\n        {\n          name: 'flip',\n          options: {\n            fallbackPlacements: fallbackPlacements,\n          },\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: offset,\n          },\n        },\n      ],\n      placement: getRTLPlacement(placement, togglerRef.current),\n    }\n\n    useEffect(() => {\n      setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      if (_visible && togglerRef.current && tooltipRef.current) {\n        initPopper(togglerRef.current, tooltipRef.current, popperConfig)\n      }\n\n      return () => {\n        destroyPopper()\n      }\n    }, [_visible])\n\n    const toggleVisible = (visible: boolean) => {\n      if (visible) {\n        setTimeout(() => setVisible(true), _delay.show)\n        return\n      }\n\n      setTimeout(() => setVisible(false), _delay.hide)\n    }\n\n    return (\n      <>\n        {React.cloneElement(children as React.ReactElement<any>, {\n          ref: togglerRef,\n          ...((trigger === 'click' || trigger.includes('click')) && {\n            onClick: () => toggleVisible(!_visible),\n          }),\n          ...((trigger === 'focus' || trigger.includes('focus')) && {\n            onFocus: () => toggleVisible(true),\n            onBlur: () => toggleVisible(false),\n          }),\n          ...((trigger === 'hover' || trigger.includes('hover')) && {\n            onMouseEnter: () => toggleVisible(true),\n            onMouseLeave: () => toggleVisible(false),\n          }),\n        })}\n        <CConditionalPortal container={container} portal={true}>\n          <Transition\n            in={_visible}\n            mountOnEnter\n            nodeRef={tooltipRef}\n            onEnter={onShow}\n            onExit={onHide}\n            timeout={{\n              enter: 0,\n              exit: tooltipRef.current\n                ? getTransitionDurationFromElement(tooltipRef.current) + 50\n                : 200,\n            }}\n            unmountOnExit\n          >\n            {(state) => (\n              <div\n                className={classNames(\n                  'tooltip',\n                  'bs-tooltip-auto',\n                  {\n                    fade: animation,\n                    show: state === 'entered',\n                  },\n                  className,\n                )}\n                ref={forkedRef}\n                role=\"tooltip\"\n                {...rest}\n              >\n                <div className=\"tooltip-arrow\"></div>\n                <div className=\"tooltip-inner\">{content}</div>\n              </div>\n            )}\n          </Transition>\n        </CConditionalPortal>\n      </>\n    )\n  },\n)\n\nCTooltip.propTypes = {\n  animation: PropTypes.bool,\n  children: PropTypes.node,\n  container: PropTypes.any,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  delay: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      show: PropTypes.number.isRequired,\n      hide: PropTypes.number.isRequired,\n    }),\n  ]),\n  fallbackPlacements: fallbackPlacementsPropType,\n  offset: PropTypes.any, // TODO: find good proptype\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  placement: PropTypes.oneOf(['auto', 'top', 'right', 'bottom', 'left']),\n  trigger: triggerPropType,\n  visible: PropTypes.bool,\n}\n\nCTooltip.displayName = 'CTooltip'\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}