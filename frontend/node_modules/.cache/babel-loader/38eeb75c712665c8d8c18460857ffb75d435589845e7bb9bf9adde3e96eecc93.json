{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CNav = forwardRef(function (_a, ref) {\n  var _b;\n  var children = _a.children,\n    className = _a.className,\n    _c = _a.component,\n    Component = _c === void 0 ? 'ul' : _c,\n    layout = _a.layout,\n    variant = _a.variant,\n    rest = __rest(_a, [\"children\", \"className\", \"component\", \"layout\", \"variant\"]);\n  return React.createElement(Component, __assign({\n    className: classNames('nav', (_b = {}, _b[\"nav-\".concat(layout)] = layout, _b[\"nav-\".concat(variant)] = variant, _b), className),\n    role: \"navigation\"\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCNav.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border'])\n};\nCNav.displayName = 'CNav';\nexport { CNav };","map":{"version":3,"names":["CNav","forwardRef","_a","ref","children","className","_c","component","Component","layout","variant","rest","__rest","React","createElement","__assign","classNames","_b","concat","role","propTypes","PropTypes","node","string","elementType","oneOf","displayName"],"sources":["C:\\Users\\Syndell025\\OneDrive\\Documents\\GitHub\\Demo_React_Node\\frontend\\node_modules\\@coreui\\react\\src\\components\\nav\\CNav.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CNavProps\n  extends HTMLAttributes<HTMLDivElement | HTMLUListElement | HTMLOListElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  component?: string | ElementType\n  /**\n   * Specify a layout type for component.\n   */\n  layout?: 'fill' | 'justified'\n  /**\n   * Set the nav variant to tabs or pills.\n   */\n  variant?: 'pills' | 'tabs' | 'underline' | 'underline-border'\n}\n\nexport const CNav = forwardRef<HTMLDivElement | HTMLUListElement | HTMLOListElement, CNavProps>(\n  ({ children, className, component: Component = 'ul', layout, variant, ...rest }, ref) => {\n    return (\n      <Component\n        className={classNames(\n          'nav',\n          {\n            [`nav-${layout}`]: layout,\n            [`nav-${variant}`]: variant,\n          },\n          className,\n        )}\n        role=\"navigation\"\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </Component>\n    )\n  },\n)\n\nCNav.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border']),\n}\n\nCNav.displayName = 'CNav'\n"],"mappings":";;;;IAwBaA,IAAI,GAAGC,UAAU,CAC5B,UAACC,EAA8E,EAAEC,GAAG;;EAAjF,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,EAAA,GAAAJ,EAAA,CAAAK,SAA2B;IAAhBC,SAAS,GAAGF,EAAA,kBAAI,GAAAA,EAAA;IAAEG,MAAM,GAAAP,EAAA,CAAAO,MAAA;IAAEC,OAAO,GAAAR,EAAA,CAAAQ,OAAA;IAAKC,IAAI,GAA5EC,MAAA,CAAAV,EAAA,6DAA8E,CAAF;EAC3E,OACEW,KAAA,CAAAC,aAAA,CAACN,SAAS,EAAAO,QAAA;IACRV,SAAS,EAAEW,UAAU,CACnB,KAAK,GAAAC,EAAA,OAEHA,EAAA,CAAC,MAAO,CAAAC,MAAA,CAAAT,MAAM,CAAE,IAAGA,MAAM,EACzBQ,EAAA,CAAC,MAAO,CAAAC,MAAA,CAAAR,OAAO,CAAE,IAAGA,OAAO,EAE7BO,EAAA,GAAAZ,SAAS,CACV;IACDc,IAAI,EAAC;EAAY,CACb,EAAAR,IAAI,EACR;IAAAR,GAAG,EAAEA;EAAG,IAEPC,QAAQ,CACC;AAEhB,CAAC;AAGHJ,IAAI,CAACoB,SAAS,GAAG;EACfhB,QAAQ,EAAEiB,SAAS,CAACC,IAAI;EACxBjB,SAAS,EAAEgB,SAAS,CAACE,MAAM;EAC3BhB,SAAS,EAAEc,SAAS,CAACG,WAAW;EAChCf,MAAM,EAAEY,SAAS,CAACI,KAAK,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;EAC9Cf,OAAO,EAAEW,SAAS,CAACI,KAAK,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,kBAAkB,CAAC;CAC5E;AAEDzB,IAAI,CAAC0B,WAAW,GAAG,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}