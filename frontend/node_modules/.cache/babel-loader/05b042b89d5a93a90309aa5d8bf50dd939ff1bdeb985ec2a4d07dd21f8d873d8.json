{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CDropdownContext } from './CDropdown.js';\nimport { CConditionalPortal } from '../conditional-portal/CConditionalPortal.js';\nimport { useForkedRef } from '../../hooks/useForkedRef.js';\nimport '@popperjs/core';\nimport { getAlignmentClassNames } from './utils.js';\nvar CDropdownMenu = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    _b = _a.component,\n    Component = _b === void 0 ? 'ul' : _b,\n    rest = __rest(_a, [\"children\", \"className\", \"component\"]);\n  var _c = useContext(CDropdownContext),\n    alignment = _c.alignment,\n    container = _c.container,\n    dark = _c.dark,\n    dropdownMenuRef = _c.dropdownMenuRef,\n    popper = _c.popper,\n    portal = _c.portal,\n    visible = _c.visible;\n  var forkedRef = useForkedRef(ref, dropdownMenuRef);\n  return React.createElement(CConditionalPortal, {\n    container: container,\n    portal: portal !== null && portal !== void 0 ? portal : false\n  }, React.createElement(Component, __assign({\n    className: classNames('dropdown-menu', {\n      show: visible\n    }, alignment && getAlignmentClassNames(alignment), className),\n    ref: forkedRef,\n    role: \"menu\",\n    \"aria-hidden\": !visible\n  }, !popper && {\n    'data-coreui-popper': 'static'\n  }, dark && {\n    'data-coreui-theme': 'dark'\n  }, rest), Component === 'ul' ? React.Children.map(children, function (child, index) {\n    if (React.isValidElement(child)) {\n      return React.createElement(\"li\", {\n        key: index\n      }, React.cloneElement(child));\n    }\n    return;\n  }) : children));\n});\nCDropdownMenu.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType\n};\nCDropdownMenu.displayName = 'CDropdownMenu';\nexport { CDropdownMenu };","map":{"version":3,"names":["CDropdownMenu","forwardRef","_a","ref","children","className","_b","component","Component","rest","__rest","_c","useContext","CDropdownContext","alignment","container","dark","dropdownMenuRef","popper","portal","visible","forkedRef","useForkedRef","React","createElement","CConditionalPortal","__assign","classNames","show","getAlignmentClassNames","role","Children","map","child","index","isValidElement","key","cloneElement","propTypes","PropTypes","node","string","elementType","displayName"],"sources":["C:\\Users\\Syndell025\\OneDrive\\Documents\\GitHub\\Demo_React_Node\\frontend\\node_modules\\@coreui\\react\\src\\components\\dropdown\\CDropdownMenu.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CDropdownContext } from './CDropdown'\nimport { CConditionalPortal } from '../conditional-portal'\n\nimport { useForkedRef } from '../../hooks'\n\nimport { getAlignmentClassNames } from './utils'\n\n\nexport interface CDropdownMenuProps extends HTMLAttributes<HTMLDivElement | HTMLUListElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  component?: string | ElementType\n}\n\nexport const CDropdownMenu = forwardRef<HTMLDivElement | HTMLUListElement, CDropdownMenuProps>(\n  ({ children, className, component: Component = 'ul', ...rest }, ref) => {\n    const { alignment, container, dark, dropdownMenuRef, popper, portal, visible } =\n      useContext(CDropdownContext)\n\n    const forkedRef = useForkedRef(ref, dropdownMenuRef)\n\n    return (\n      <CConditionalPortal container={container} portal={portal ?? false}>\n        <Component\n          className={classNames(\n            'dropdown-menu',\n            {\n              show: visible,\n            },\n            alignment && getAlignmentClassNames(alignment),\n            className,\n          )}\n          ref={forkedRef}\n          role=\"menu\"\n          aria-hidden={!visible}\n          {...(!popper && { 'data-coreui-popper': 'static' })}\n          {...(dark && { 'data-coreui-theme': 'dark' })}\n          {...rest}\n        >\n          {Component === 'ul'\n            ? React.Children.map(children, (child, index) => {\n                if (React.isValidElement(child)) {\n                  return <li key={index}>{React.cloneElement(child)}</li>\n                }\n                return\n              })\n            : children}\n        </Component>\n      </CConditionalPortal>\n    )\n  },\n)\n\nCDropdownMenu.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n}\n\nCDropdownMenu.displayName = 'CDropdownMenu'\n"],"mappings":";;;;;;;;;IAuBaA,aAAa,GAAGC,UAAU,CACrC,UAACC,EAA6D,EAAEC,GAAG;EAAhE,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,EAA2B,GAAAJ,EAAA,CAAAK,SAAA;IAAhBC,SAAS,GAAAF,EAAA,cAAG,IAAI,GAAAA,EAAA;IAAKG,IAAI,GAAAC,MAAA,CAAAR,EAAA,EAA3D,sCAA6D,CAAF;EACpD,IAAAS,EAAA,GACJC,UAAU,CAACC,gBAAgB,CAAC;IADtBC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IAAEC,IAAI,GAAAL,EAAA,CAAAK,IAAA;IAAEC,eAAe,GAAAN,EAAA,CAAAM,eAAA;IAAEC,MAAM,GAAAP,EAAA,CAAAO,MAAA;IAAEC,MAAM,GAAAR,EAAA,CAAAQ,MAAA;IAAEC,OAAO,GAAAT,EAAA,CAAAS,OAC9C;EAE9B,IAAMC,SAAS,GAAGC,YAAY,CAACnB,GAAG,EAAEc,eAAe,CAAC;EAEpD,OACEM,KAAC,CAAAC,aAAA,CAAAC,kBAAkB,EAAC;IAAAV,SAAS,EAAEA,SAAS;IAAEI,MAAM,EAAEA,MAAM,KAAN,QAAAA,MAAM,KAAN,SAAAA,MAAM,GAAI;EAAK,GAC/DI,KAAA,CAAAC,aAAA,CAAChB,SAAS,EACRkB,QAAA;IAAArB,SAAS,EAAEsB,UAAU,CACnB,eAAe,EACf;MACEC,IAAI,EAAER;KACP,EACDN,SAAS,IAAIe,sBAAsB,CAACf,SAAS,CAAC,EAC9CT,SAAS,CACV;IACDF,GAAG,EAAEkB,SAAS;IACdS,IAAI,EAAC,MAAM;IACE,gBAACV;EAAO,GAChB,CAACF,MAAM,IAAI;IAAE,oBAAoB,EAAE;EAAQ,CAAE,EAC7CF,IAAI,IAAI;IAAE,mBAAmB,EAAE;EAAM,CAAE,EACxCP,IAAI,GAEPD,SAAS,KAAK,IAAI,GACfe,KAAK,CAACQ,QAAQ,CAACC,GAAG,CAAC5B,QAAQ,EAAE,UAAC6B,KAAK,EAAEC,KAAK;IACxC,IAAIX,KAAK,CAACY,cAAc,CAACF,KAAK,CAAC,EAAE;MAC/B,OAAOV,KAAI,CAAAC,aAAA;QAAAY,GAAG,EAAEF;MAAK,CAAG,EAAAX,KAAK,CAACc,YAAY,CAACJ,KAAK,CAAC,CAAM;IACxD;IACD;EACF,CAAC,CAAC,GACF7B,QAAQ,CACF,CACO;AAEzB,CAAC;AAGHJ,aAAa,CAACsC,SAAS,GAAG;EACxBlC,QAAQ,EAAEmC,SAAS,CAACC,IAAI;EACxBnC,SAAS,EAAEkC,SAAS,CAACE,MAAM;EAC3BlC,SAAS,EAAEgC,SAAS,CAACG;CACtB;AAED1C,aAAa,CAAC2C,WAAW,GAAG,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}