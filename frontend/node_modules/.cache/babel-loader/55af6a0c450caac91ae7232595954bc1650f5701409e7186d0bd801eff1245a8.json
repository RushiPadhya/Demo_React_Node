{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nvar CLink = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    active = _a.active,\n    className = _a.className,\n    _b = _a.component,\n    Component = _b === void 0 ? 'a' : _b,\n    disabled = _a.disabled,\n    rest = __rest(_a, [\"children\", \"active\", \"className\", \"component\", \"disabled\"]);\n  return React.createElement(Component\n  // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`\n  , __assign({\n    // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`\n    className: classNames(className, {\n      active: active,\n      disabled: disabled\n    })\n  }, active && {\n    'aria-current': 'page'\n  }, Component === 'a' && disabled && {\n    'aria-disabled': true,\n    tabIndex: -1\n  }, (Component === 'a' || Component === 'button') && {\n    onClick: function (event) {\n      event.preventDefault;\n      !disabled && rest.onClick && rest.onClick(event);\n    }\n  }, {\n    disabled: disabled\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCLink.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n  disabled: PropTypes.bool\n};\nCLink.displayName = 'CLink';\nexport { CLink };","map":{"version":3,"names":["CLink","forwardRef","_a","ref","children","active","className","_b","component","Component","disabled","rest","__rest","React","createElement","classNames","tabIndex","onClick","event","preventDefault","propTypes","PropTypes","bool","node","string","elementType","displayName"],"sources":["C:\\Users\\Syndell025\\OneDrive\\Documents\\GitHub\\Demo_React_Node\\frontend\\node_modules\\@coreui\\react\\src\\components\\link\\CLink.tsx"],"sourcesContent":["import React, { AllHTMLAttributes, ElementType, forwardRef, MouseEvent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CLinkProps extends AllHTMLAttributes<HTMLButtonElement | HTMLAnchorElement> {\n  /**\n   * Toggle the active state for the component.\n   */\n  active?: boolean\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  component?: string | ElementType\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * The href attribute specifies the URL of the page the link goes to.\n   */\n  href?: string\n}\n\nexport const CLink = forwardRef<HTMLButtonElement | HTMLAnchorElement, CLinkProps>(\n  ({ children, active, className, component: Component = 'a', disabled, ...rest }, ref) => {\n    return (\n      <Component\n        // TODO: remove duplicated classes ex. `active active` in `<CListGroupItem>`\n        className={classNames(className, { active, disabled })}\n        {...(active && { 'aria-current': 'page' })}\n        {...(Component === 'a' && disabled && { 'aria-disabled': true, tabIndex: -1 })}\n        {...((Component === 'a' || Component === 'button') && {\n          onClick: (event: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => {\n            event.preventDefault\n            !disabled && rest.onClick && rest.onClick(event)\n          },\n        })}\n        disabled={disabled}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </Component>\n    )\n  },\n)\n\nCLink.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n  disabled: PropTypes.bool,\n}\n\nCLink.displayName = 'CLink'\n"],"mappings":";;;;IA2BaA,KAAK,GAAGC,UAAU,CAC7B,UAACC,EAA8E,EAAEC,GAAG;EAAjF,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;IAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IAAEC,EAA0B,GAAAL,EAAA,CAAAM,SAAA;IAAfC,SAAS,GAAGF,EAAA,iBAAG,GAAAA,EAAA;IAAEG,QAAQ,GAAAR,EAAA,CAAAQ,QAAA;IAAKC,IAAI,GAA5EC,MAAA,CAAAV,EAAA,8DAA8E,CAAF;EAC3E,OACEW,KAAA,CAAAC,aAAA,CAACL;;;;IAECH,SAAS,EAAES,UAAU,CAACT,SAAS,EAAE;MAAED,MAAM,EAAAA,MAAA;MAAEK,QAAQ,EAAAA;IAAA,CAAE;EAAC,CAClD,EAACL,MAAM,IAAI;IAAE,cAAc,EAAE;EAAM,CAAE,EACpCI,SAAS,KAAK,GAAG,IAAIC,QAAQ,IAAI;IAAE,eAAe,EAAE,IAAI;IAAEM,QAAQ,EAAE,CAAC;EAAC,CAAE,EACxE,CAACP,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,QAAQ,KAAK;IACpDQ,OAAO,EAAE,SAAAA,CAACC,KAAwD;MAChEA,KAAK,CAACC,cAAc;MACpB,CAACT,QAAQ,IAAIC,IAAI,CAACM,OAAO,IAAIN,IAAI,CAACM,OAAO,CAACC,KAAK,CAAC;;EAEnD,GACD;IAAAR,QAAQ,EAAEA;EAAQ,GACdC,IAAI;IACRR,GAAG,EAAEA;EAAG,IAEPC,QAAQ,CACC;AAEhB,CAAC;AAGHJ,KAAK,CAACoB,SAAS,GAAG;EAChBf,MAAM,EAAEgB,SAAS,CAACC,IAAI;EACtBlB,QAAQ,EAAEiB,SAAS,CAACE,IAAI;EACxBjB,SAAS,EAAEe,SAAS,CAACG,MAAM;EAC3BhB,SAAS,EAAEa,SAAS,CAACI,WAAW;EAChCf,QAAQ,EAAEW,SAAS,CAACC;CACrB;AAEDtB,KAAK,CAAC0B,WAAW,GAAG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}