{"ast":null,"code":"import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../node_modules/classnames/index.js';\nimport { CLink } from '../link/CLink.js';\nvar CDropdownItem = forwardRef(function (_a, ref) {\n  var children = _a.children,\n    className = _a.className,\n    _b = _a.component,\n    component = _b === void 0 ? 'a' : _b,\n    rest = __rest(_a, [\"children\", \"className\", \"component\"]);\n  return React.createElement(CLink, __assign({\n    className: classNames('dropdown-item', className),\n    component: component\n  }, rest, {\n    ref: ref\n  }), children);\n});\nCDropdownItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType\n};\nCDropdownItem.displayName = 'CDropdownItem';\nexport { CDropdownItem };","map":{"version":3,"names":["CDropdownItem","forwardRef","_a","ref","children","className","_b","component","rest","__rest","React","createElement","CLink","__assign","classNames","propTypes","PropTypes","node","string","elementType","displayName"],"sources":["C:\\Users\\Syndell025\\OneDrive\\Documents\\GitHub\\Demo_React_Node\\frontend\\node_modules\\@coreui\\react\\src\\components\\dropdown\\CDropdownItem.tsx"],"sourcesContent":["import React, { ElementType, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CLink, CLinkProps } from '../link/CLink'\n\nexport interface CDropdownItemProps extends CLinkProps {\n  /**\n   * A string of all className you want applied to the component.\n   */\n  className?: string\n  /**\n   * Component used for the root node. Either a string to use a HTML element or a component.\n   */\n  component?: string | ElementType\n}\n\nexport const CDropdownItem = forwardRef<HTMLButtonElement | HTMLAnchorElement, CDropdownItemProps>(\n  ({ children, className, component = 'a', ...rest }, ref) => {\n    return (\n      <CLink\n        className={classNames('dropdown-item', className)}\n        component={component}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </CLink>\n    )\n  },\n)\n\nCDropdownItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n}\n\nCDropdownItem.displayName = 'CDropdownItem'\n"],"mappings":";;;;;IAiBaA,aAAa,GAAGC,UAAU,CACrC,UAACC,EAAiD,EAAEC,GAAG;EAApD,IAAAC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IAAEC,SAAS,GAAAH,EAAA,CAAAG,SAAA;IAAEC,EAAe,GAAAJ,EAAA,CAAAK,SAAA;IAAfA,SAAS,GAAAD,EAAA,cAAG,GAAG,GAAAA,EAAA;IAAKE,IAAI,GAAAC,MAAA,CAAAP,EAAA,EAA/C,sCAAiD,CAAF;EAC9C,OACEQ,KAAC,CAAAC,aAAA,CAAAC,KAAK,EACJC,QAAA;IAAAR,SAAS,EAAES,UAAU,CAAC,eAAe,EAAET,SAAS,CAAC;IACjDE,SAAS,EAAEA;EAAS,CAChB,EAAAC,IAAI,EACR;IAAAL,GAAG,EAAEA;EAAG,CAEP,GAAAC,QAAQ,CACH;AAEZ,CAAC;AAGHJ,aAAa,CAACe,SAAS,GAAG;EACxBX,QAAQ,EAAEY,SAAS,CAACC,IAAI;EACxBZ,SAAS,EAAEW,SAAS,CAACE,MAAM;EAC3BX,SAAS,EAAES,SAAS,CAACG;CACtB;AAEDnB,aAAa,CAACoB,WAAW,GAAG,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}